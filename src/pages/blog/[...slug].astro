---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/BlogPost.astro";
import Container from "../../components/shared/Container.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);

const posts = (await getCollection("blog"))
	.filter((postItem) => postItem.id !== post.id)
	.sort((a, b) => a.data.order - b.data.order);
---

<Layout
	title={post.data.title}
	metatitle={post.data.metatitle}
	description={post.data.description}
	metadescription={post.data.metadescription}
	heroimage={post.data.imgurl}
	heroimagethumb={post.data.imgthumburl}
	slug={post.id}
>
	<Container className="mt-10">
		<div class="flex flex-col lg:flex-row gap-10">
			<div class="lg:w-2/3 w-full flex flex-col gap-4">
				<div class="prose">
					<Content />
				</div>
			</div>

			<div
				class="lg:w-1/3 w-full mt-4 lg:mt-0 bg-cedit-50 px-10 rounded-lg"
			>
				<img
					src={post.data.imgthumburl}
					transition:name={`img-${post.id}`}
					alt={`Imagen de ${post.data.title}`}
				/>
				<h2 class="text-lg font-semibold mb-2 underline">
					Otros art√≠culos:
				</h2>
				<ul class="flex flex-col gap-2">
					{
						posts.map((postItem) => (
							<li class="text-sm text-gray-700">
								<a
									href={`/blog/${postItem.id}`}
									class="hover:underline"
								>
									{postItem.data.title}
								</a>
							</li>
						))
					}
				</ul>
			</div>
		</div>
	</Container>
</Layout>
